[alias]
	# View abbreviated SHA, description, and history graph of the latest 20 commits
	l = log --pretty=oneline -n 20 --graph --abbrev-commit
	# View the current working tree status using the short format
	s = status -s
	# Pull in remote changes for the current repository and all its submodules
	p = !"git pull; git submodule foreach git pull origin master"
    # Push changes for the current repository and all altered submodules
    pu = push --recurse-submodules=on-demand
	# Clone a repository including all submodules
	c = clone --recursive
	# Commit all changes
	ca = !git add -A && git commit -av
    # Switch to a branch
    co = checkout
	# Switch to a branch, creating it if necessary
	go = checkout -B
	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v
	# Credit an author on the latest commit
	credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"
	# Interactive rebase with the given number of latest commits
	reb = "!r() { git rebase -i HEAD~$1; }; r"
	d = difftool --no-symlinks --dir-diff
[user]
	name = Paul Grillenberger
	email = grillenbergerpaul@gmail.com
[includeIf "gitdir:~/Work/"]
    path = ~/Work/.gitconfig
[credential]
	helper = osxkeychain
[push]
	default = simple
[core]
	excludesfile = /Users/paul/.gitignore_global
[diff]
    tool = kitty
    guitool = kitty.gui
[difftool]
    prompt = false
    trustExitCode = true
[difftool "kitty"]
    cmd = kitty +kitten diff $LOCAL $REMOTE
[difftool "kitty.gui"]
    cmd = kitty kitty +kitten diff $LOCAL $REMOTE
[merge]
	tool = vimdiff
	conflictstyle = diff3
[mergetool]
    prompt = false
    keepBackup = false
[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
[pull]
	rebase = true
[fetch]
	prune = true
[init]
	defaultBranch = master
